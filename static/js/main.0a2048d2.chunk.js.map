{"version":3,"sources":["Components/Header.js","Components/List.js","App.js","index.js"],"names":["Header","className","List","dt","useRef","localStorageRows","localStorage","getItem","rowsAsObject","JSON","parse","useState","rows","setRows","inputTextEditor","props","field","type","value","rowData","onChange","e","updatedProducts","rowIndex","setItem","stringify","onEditorValueChange","target","header","icon","onClick","selectionOnly","console","log","current","exportCSV","data-pr-tooltip","ref","editor","body","iconPos","newRows","filter","x","id","deleteRow","label","prevRows","Math","random","company","date","time","title","url","status","App","PrimeReact","ripple","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAiBeA,EAbA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAIA,UAAU,kBAAd,UACE,sBAAMA,UAAU,uBAAhB,wBACA,sBAAMA,UAAU,sBAAhB,wC,+CCmHKC,G,MArHF,WACX,IAAMC,EAAKC,iBAAO,MAEZC,EAAmBC,aAAaC,QAAQ,QAC1CC,EAAeC,KAAKC,MAAML,GACzBG,IACHA,EAAe,IAGjB,MAAwBG,mBAASH,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAuBMC,EAAkB,SAACC,EAAOC,GAC9B,OACE,qBAAKf,UAAU,QAAf,SACE,cAAC,YAAD,CACEA,UAAU,kCACVgB,KAAK,OACLC,MAAOH,EAAMI,QAAQH,GACrBI,SAAU,SAACC,GAAD,OAbU,SAACN,EAAOG,GAClC,IAAII,EAAe,YAAOP,EAAMG,OAChCI,EAAgBP,EAAMQ,UAAUR,EAAMC,OAASE,EAC/CL,EAAQS,GACRhB,aAAakB,QAAQ,OAAQf,KAAKgB,UAAUb,IASrBc,CAAoBX,EAAOM,EAAEM,OAAOT,aAwCvDU,EACJ,qBAAK3B,UAAU,sCAAf,SACE,cAAC,SAAD,CACEgB,KAAK,SACLY,KAAK,eACLC,QAAS,kBAVIC,GAUY,EAT7BC,QAAQC,IAAI9B,EAAG+B,cACf/B,EAAG+B,QAAQC,UAAU,CAAEJ,kBAFP,IAACA,GAWb9B,UAAU,SACVmC,kBAAgB,UAKtB,OACE,qBAAKnC,UAAU,SAAf,SACE,sBAAKA,UAAU,QAAf,UACE,eAAC,YAAD,CACEiB,MAAON,EACPX,UAAU,wBACV2B,OAAQA,EACRS,IAAKlC,EAJP,UAME,cAAC,SAAD,CAAQa,MAAM,OAAOY,OAAO,OAAOU,OAxDxB,SAACvB,GAClB,OAAOD,EAAgBC,EAAO,WAwDxB,cAAC,SAAD,CAAQC,MAAM,OAAOY,OAAO,OAAOU,OAtDxB,SAACvB,GAClB,OAAOD,EAAgBC,EAAO,WAsDxB,cAAC,SAAD,CAAQC,MAAM,OAAOY,OAAO,OAAOU,OApDxB,SAACvB,GAClB,OAAOD,EAAgBC,EAAO,WAoDxB,cAAC,SAAD,CAAQC,MAAM,SAASY,OAAO,SAASU,OA/C1B,SAACvB,GACpB,OAAOD,EAAgBC,EAAO,aA+CxB,cAAC,SAAD,CAAQC,MAAM,UAAUY,OAAO,UAAUU,OAnD3B,SAACvB,GACrB,OAAOD,EAAgBC,EAAO,cAmDxB,cAAC,SAAD,CAAQC,MAAM,SAASY,OAAO,GAAGW,KAzClB,SAACpB,GACtB,OACE,cAAC,SAAD,CACEU,KAAK,cACLW,QAAQ,OACRV,QAAS,kBAVG,SAACX,GACjB,IAAMsB,EAAU7B,EAAK8B,QAAO,SAACC,GAAD,OAAOA,EAAEC,KAAOzB,EAAQyB,MACpD/B,EAAQ,YAAI4B,IACZnC,aAAakB,QAAQ,OAAQf,KAAKgB,UAAUgB,IAOzBI,CAAU1B,YAsCzB,cAAC,SAAD,CACE2B,MAAM,sBACN7C,UAAU,kBACV6B,QAxFU,WAAO,IAAD,GACtB,EAAAE,SAAQC,IAAR,oBAAerB,IACfC,GAAQ,SAACkC,GAAD,4BAAkBA,GAAlB,CAZD,CACLH,GAAoB,IAAhBI,KAAKC,SACTC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,OAAQ,mBCNCC,MAXf,WAGE,OAFAC,IAAWC,QAAS,EAGlB,sBAAKzD,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCXN0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a2048d2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"text-box\">\r\n        <h1 className=\"heading-primary\">\r\n          <span className=\"heading-primary-main\">To Do List</span>\r\n          <span className=\"heading-primary-sub\">Never Forget Again</span>\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"primereact/button\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { InputText } from \"primereact/inputtext\";\r\n\r\nimport \"./List.css\";\r\n\r\nconst List = () => {\r\n  const dt = useRef(null);\r\n\r\n  const localStorageRows = localStorage.getItem(\"rows\");\r\n  let rowsAsObject = JSON.parse(localStorageRows);\r\n  if (!rowsAsObject) {\r\n    rowsAsObject = [];\r\n  }\r\n\r\n  const [rows, setRows] = useState(rowsAsObject);\r\n\r\n  const createNewApplication = () => {\r\n    return {\r\n      id: Math.random() * 100000,\r\n      company: \"\",\r\n      date: \"\",\r\n      time: \"\",\r\n      title: \"\",\r\n      url: \"\",\r\n      status: \"\",\r\n    };\r\n  };\r\n  const addNewRow = () => {\r\n    console.log(...rows);\r\n    setRows((prevRows) => [...prevRows, createNewApplication()]);\r\n  };\r\n  const onEditorValueChange = (props, value) => {\r\n    let updatedProducts = [...props.value];\r\n    updatedProducts[props.rowIndex][props.field] = value;\r\n    setRows(updatedProducts);\r\n    localStorage.setItem(\"rows\", JSON.stringify(rows));\r\n  };\r\n  const inputTextEditor = (props, field) => {\r\n    return (\r\n      <div className=\"sizes\">\r\n        <InputText\r\n          className=\"p-inputtext-sm p-d-block p-mb-2\"\r\n          type=\"text\"\r\n          value={props.rowData[field]}\r\n          onChange={(e) => onEditorValueChange(props, e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const taskEditor = (props) => {\r\n    return inputTextEditor(props, \"task\");\r\n  };\r\n  const dateEditor = (props) => {\r\n    return inputTextEditor(props, \"date\");\r\n  };\r\n  const timeEditor = (props) => {\r\n    return inputTextEditor(props, \"time\");\r\n  };\r\n  const commentEditor = (props) => {\r\n    return inputTextEditor(props, \"comment\");\r\n  };\r\n  const statusEditor = (props) => {\r\n    return inputTextEditor(props, \"status\");\r\n  };\r\n  const deleteRow = (rowData) => {\r\n    const newRows = rows.filter((x) => x.id !== rowData.id);\r\n    setRows([...newRows]);\r\n    localStorage.setItem(\"rows\", JSON.stringify(newRows));\r\n  };\r\n  const deleteTemplate = (rowData) => {\r\n    return (\r\n      <Button\r\n        icon=\"pi pi-trash\"\r\n        iconPos=\"left\"\r\n        onClick={() => deleteRow(rowData)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const exportCSV = (selectionOnly) => {\r\n    console.log(dt.current);\r\n    dt.current.exportCSV({ selectionOnly });\r\n  };\r\n\r\n  const header = (\r\n    <div className=\"p-d-flex p-ai-center export-buttons\">\r\n      <Button\r\n        type=\"button\"\r\n        icon=\"pi pi-file-o\"\r\n        onClick={() => exportCSV(false)}\r\n        className=\"p-mr-2\"\r\n        data-pr-tooltip=\"CSV\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"table\">\r\n        <DataTable\r\n          value={rows}\r\n          className=\"p-datatable-gridlines\"\r\n          header={header}\r\n          ref={dt}\r\n        >\r\n          <Column field=\"task\" header=\"Task\" editor={taskEditor}></Column>\r\n          <Column field=\"date\" header=\"Date\" editor={dateEditor}></Column>\r\n          <Column field=\"time\" header=\"Time\" editor={timeEditor}></Column>\r\n          <Column field=\"status\" header=\"Status\" editor={statusEditor}></Column>\r\n          <Column field=\"comment\" header=\"Comment\" editor={commentEditor}></Column>\r\n          <Column field=\"delete\" header=\"\" body={deleteTemplate}></Column>\r\n        </DataTable>\r\n        <Button\r\n          label=\"Add New Application\"\r\n          className=\"p-button-raised\"\r\n          onClick={addNewRow}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import \"./App.css\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport PrimeReact from \"primereact/api\";\n\nimport Header from \"./Components/Header\";\nimport List from \"./Components/List\";\n\n\nfunction App() {\n  PrimeReact.ripple = true;\n\n  return (\n    <div className=\"layout\">\n      <Header />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}